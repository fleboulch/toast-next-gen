// a compl√©ter avec infos ENT
entity ConventionStage {
	sujet String,
    fonctions String,
    competences String,
	dateDebut ZonedDateTime,
    dateFin ZonedDateTime
}

entity Tuteur {
	nom String,
    prenom String,
    telephone String,
    mail String
}

entity Intervenant {
	nom String,
    prenom String,
    telephone String,
    mail String
}

entity MaitreStage {
	nom String,
    prenom String,
    telephone String,
    mail String,
    fonction String,
    ancienEtudiant Boolean,
    debutVersion Long,
    finVersion Long
}

entity Etudiant {
	nom String,
    prenom String,
    mail String,
    sexe String,
    numEtudiant String required
}

// an ignored comment
/** not an ignored comment */
entity Entreprise {
	nom String,
	pays String,
    numSiret String required,
    numSiren String required,
    telephone String,
    debutVersion Long,
    finVersion Long
}

entity Groupe {
	nom String,
    debutVersion Long,
    finVersion Long
}

entity Site {
	adresse String,
    codePostal String,
	ville String,
    pays String,
    siege Boolean,
    telephone String,
    debutVersion Long,
    finVersion Long
}

entity Diplome {
	nom String required,
    debutVersion Long,
    finVersion Long
}

entity Partenariat {
	dateDebut ZonedDateTime,
    dateFin ZonedDateTime
}

entity Filiere {
	niveau String required
}

entity Promotion {
	annee ZonedDateTime required
}

relationship ManyToMany {
	Partenariat{diplome(nom)} to Diplome{partenariat},
    Etudiant{diplome(nom)} to Diplome{etudiant},
    Intervenant{diplome(nom)} to Diplome{intervenant}
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Diplome{filiere} to Filiere,
	Filiere{promotion} to Promotion,
    Etudiant{conventionStage} to ConventionStage,
    Site{siege} to ConventionStage{siege},
    Site{lieuStage} to ConventionStage{lieuStage},
    Entreprise{partenariat} to Partenariat,
    Entreprise{site} to Site,
    Entreprise{intervenant} to Intervenant,
    Groupe{entreprise} to Entreprise,
    Tuteur{conventionStage} to ConventionStage,
    MaitreStage{conventionStage} to ConventionStage
}

// we have to manage the versioning of the promotion

// Set pagination options
paginate ConventionStage, Etudiant with infinite-scroll
paginate Entreprise with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl
// Set an angular suffix
//angularSuffix * with mySuffix
